// components for button



/* styling the btn button */
/* to style a button link, you need to include the btn:link specification */
/* the link is the pseudo-class wch is a special state of selector*/
/* btn:visited the state a user has clicked the button b4 and then see the button again */


.btn {
    &:link,
&:visited {
    text-transform: uppercase;
    font-size: 1.6rem;
    text-decoration: none;   
    /*padding around button  */
    padding: 1.5rem 4rem;
    /* displaying btn as an inlink block to execute padding */
    display: inline-block;
    border-radius: 8rem;
    /* all properties are enabled to be translated to .2 seconds */
    transition: all .2s;
    /* position relative to ::after */
    position: relative;
    
    
}
/* work on the hover state */
/* when we hover, we want the element to move up */
&:hover {
    transform: translateY(-0.3rem);
    /* adding box-show on hover. since we dont want offset in x-direction */
    box-shadow: 0 1rem 2rem rgba($color-black,0.2);
}
/* when we click a btn, thats the active state */
/* so when we click the btn, it moves down slightly */
&:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba($color-black,0.2);
}


/* styling color to white */
&--white {
    background-color: #fff;
    color: $color-gray-dark;
}

/* pseudo-elements allow us to style some parts of elements */
/* e.g after pseudo adds a vitual element to the element which enables us to style it*/

&::after {
    /* always specify content property */
    content:"";
    display: inline-block; /* inline-block since the button is also inline-block*/
    height: 100%;
    width:100%;
    border-radius: 8rem;
    /* place the ::after behind the button */
    position: absolute; /* position is absolute so its relative to the actual button, we need to include it in the btn*/
    top: 0;
    left:0;
    /* place the z-index(defines position of element if they are one on top of another)*/
    z-index: -1;
    transition: all .4s;

}
/* ::after pseduo-element with button white */
&--white::after {
    background-color:#fff;
}

/* after pseudo element when button is hovered */
&:hover::after {
    /* transform scale increases the element */
    transform: scaleX(1.4) scaleY(1.6);
    /* to make the element fade out */
    opacity: 0;
}

&--animated {
    animation: moveInBottom .5s ease-out;
    /* animation fill mode. it applies the style of 0% before animation starts */
    animation-fill-mode: backwards;
}
}