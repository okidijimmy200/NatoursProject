// we start with a row
// we define the width of a row
.row {
    // standard dimension
    max-width:$grid-width;
    background-color:$color-grey-light-1;
    // center the row in the viewport
    // this is a way of centering block elements inside another block element
    margin: 0 auto;    
    // removing margin from last column
    &:not(:last-child) {
        // creating space btn margins
        margin-bottom: $gutter-vertical;
    }
    @include clearfix;
    // working on the columns
    // we are going to use the attributes selector
    [class^="col-"] {       
        // we  need to float the columns to the left
        float:left;
        &:not(:last-child) {
            margin-right:$gutter-horizontal;
        }
    }
    .col-1-of-2 {
        width: calc((100% - #{$gutter-horizontal}) / 2);
      
        // here the height has been broken, so we use clear fix to solve the problem
        
    }
    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }
    // here we multiply two times thw width of 1-of-3 column plus gutter width
    .col-2-of-3 {
        width:calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }
    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);

    }

    .col-2-of-4{
        width:calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }
    // grid display of 3 of 4
    .col-3-of-4 {
        width:calc(3 *((100% - 3 * #{$gutter-horizontal}) / 4) + 2*#{$gutter-horizontal} )
    }
    
}